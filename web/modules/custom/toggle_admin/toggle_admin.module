<?php

use Drupal\Core\Url;
use Drupal\Core\Routing\RouteMatchInterface;

function toggle_admin_page_attachments_alter(array &$page) {
  $config = \Drupal::config('toggle_admin.settings');

  // Exit if toggle admin controls are not enabled
  $isEnabled = $config->get('toggle_enabled');
  if (!$isEnabled) {
    return;
  }
  
  // Exit if current route is an Admin page
  $isAdminPage = \Drupal::service('router.admin_context')->isAdminRoute();
  if ($isAdminPage) {
    return;
  }

  // Check who the current user is
  $user = \Drupal::currentUser();
  $isAuthUser = $user->isAuthenticated();
  $username = $user->getDisplayName();

  // Exit if the current user is not authenticated
  if (!$isAuthUser) {
    return;
  }

  // Exit if specific user enabling is set and 
  // the settings are not enabled for the current user
  $enabledUsers = array_map('trim', explode(",", $config->get('enable_for_users')));
  $enabledForUser = $enabledUsers[0] == '' || in_array($username, $enabledUsers, true);
  if (!$enabledForUser) {
    return;
  }
  
  $route = \Drupal::routeMatch();
  $node = $route->getParameter('node');
  if ($node) {
    $page['#attached']['drupalSettings']['toggleAdmin']['nodeId'] = $node->id();
  }

  $page['#attached']['drupalSettings']['toggleAdmin']['toggleLocalTasks'] = $config->get('toggle_local_tasks');

  $page['#attached']['drupalSettings']['toggleAdmin']['enabledButtons'] = array(
    'clearCache' => $config->get('enable_clear_cache'),
    'edit' => $config->get('enable_edit'),
    'logs' => $config->get('enable_logs'),
    'cron' => $config->get('enable_run_cron'),
  );

  if ($config->get('default_on')) {
    if ($config->get('toggle_local_tasks')) {
      $page['#attached']['library'][] = 'toggle_admin/default_on_w_local_tasks';
    } else {
      $page['#attached']['library'][] = 'toggle_admin/default_on';
    }
  } else {
    if ($config->get('toggle_local_tasks')) {
      $page['#attached']['library'][] = 'toggle_admin/default_off_w_local_tasks';
    } else {
      $page['#attached']['library'][] = 'toggle_admin/default_off';
    }
  }

  if ($config->get('default_position') == 'bottom-left') {
    $page['#attached']['library'][] = 'toggle_admin/default_bottom_left';
  } else {
    $page['#attached']['library'][] = 'toggle_admin/default_bottom_right';
  }
}

/**
 * Implements hook_help()
 */
function toggle_admin_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.toggle_admin':
      $output = '';
      $output .= '<h2>' . t('Reason For This Module') . '</h2>';
      $output .= '<p>' . t('This module was created to improve the developer and quality control experience. The main administration menu can sometimes get in the way and sometimes conflict with the layout of the page.') . '</p>';
      $output .= '<h2>' . t('Key Features') . '</h2>';
      $output .= '<ol>';
      $output .= '<li>' . t('Floating buttons with button for toggling the visibility of the admin menu, plus buttons for the most frequently used actions.') . '</li>';
      $output .= '<li>' . t('Ability to customize which action buttons are enabled.') . '</li>';
      $output .= '<li>' . t('Choose the default location of floating action buttons.') . '</li>';
      $output .= '<li>' . t('Floating action buttons can be moved around the screen by dragging and dropping.') . '</li>';
      $output .= '<li>' . t('Customize this functionality to only display for specific users.') . '</li>';
      $output .= '</ol>';
      $ouput .= '<br>';

      return $output;
  }
}